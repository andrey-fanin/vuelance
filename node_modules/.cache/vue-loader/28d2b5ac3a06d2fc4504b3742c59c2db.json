{"remainingRequest":"C:\\prog\\Новая папка\\3week\\Новая папка (2)\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\prog\\Новая папка\\3week\\Новая папка (2)\\src\\components\\TaskStatus.vue?vue&type=template&id=9a9b36e2&scoped=true","dependencies":[{"path":"C:\\prog\\Новая папка\\3week\\Новая папка (2)\\src\\components\\TaskStatus.vue","mtime":1654529479543},{"path":"C:\\prog\\Новая папка\\3week\\Новая папка (2)\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\prog\\Новая папка\\3week\\Новая папка (2)\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\prog\\Новая папка\\3week\\Новая папка (2)\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\prog\\Новая папка\\3week\\Новая папка (2)\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHNwYW4gOmNsYXNzPSJbJ2JhZGdlJywgY2xhc3NOYW1lXSI+e3sgdGV4dCB9fTwvc3Bhbj4K"},{"version":3,"sources":["C:\\prog\\Новая папка\\3week\\Новая папка (2)\\src\\components\\TaskStatus.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/prog/Новая папка/3week/Новая папка (2)/src/components/TaskStatus.vue","sourceRoot":"","sourcesContent":["<template>\n  <span :class=\"['badge', className]\">{{ text }}</span>\n</template>\n\n<script>\nimport {watch, ref} from 'vue'\nexport default {\n  props: {\n    type: {\n      type: String,\n      validator(value) {\n        return ['active', 'done', 'pending', 'cancelled'].includes(value)\n      }\n    }\n  },\n  setup(props) {\n    const classesMap = {\n      active: 'primary',\n      cancelled: 'danger',\n      done: 'primary',\n      pending: 'warning'\n    }\n\n    const textMap = {\n      active: 'Active',\n      cancelled: 'Cancelled',\n      done: 'Done',\n      pending: 'Pending'\n    }\n\n    const className = ref(classesMap[props.type])\n    const text = ref(textMap[props.type])\n\n    watch(props, val => {\n      className.value = classesMap[val.type]\n      text.value = textMap[val.type]\n    })\n\n    return {\n      className,\n      text\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}